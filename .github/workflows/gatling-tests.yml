name: Gatling Performance Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-login:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Login Performance Test
        run: mvn gatling:test -Dgatling.simulationClass=parabank.LoginPerformanceTest

      - name: Upload Login Test Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: login-performance-report
          path: target/gatling/
          retention-days: 30

  test-transfers:
    needs: test-login
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Transfer Performance Test
        run: mvn gatling:test -Dgatling.simulationClass=parabank.TransferPerformanceTest

      - name: Upload Transfer Test Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: transfer-performance-report
          path: target/gatling/
          retention-days: 30

  test-statements:
    needs: test-transfers
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Account Statement Performance Test
        run: mvn gatling:test -Dgatling.simulationClass=parabank.AccountStatementPerformanceTest

      - name: Upload Statement Test Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: statement-performance-report
          path: target/gatling/
          retention-days: 30

  test-loans:
    needs: test-statements
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Loan Request Performance Test
        run: mvn gatling:test -Dgatling.simulationClass=parabank.LoanRequestPerformanceTest

      - name: Upload Loan Test Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: loan-performance-report
          path: target/gatling/
          retention-days: 30

  test-billpay:
    needs: test-loans
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Bill Pay Performance Test
        run: mvn gatling:test -Dgatling.simulationClass=parabank.BillPayPerformanceTest

      - name: Upload Bill Pay Test Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: billpay-performance-report
          path: target/gatling/
          retention-days: 30

  summary:
    needs: [test-login, test-transfers, test-statements, test-loans, test-billpay]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Generate Test Summary
        run: |
          echo "## 🚀 Gatling Performance Tests Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Login Performance | ${{ needs.test-login.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Transfer Performance | ${{ needs.test-transfers.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Statement Performance | ${{ needs.test-statements.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Loan Performance | ${{ needs.test-loans.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Bill Pay Performance | ${{ needs.test-billpay.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Download detailed reports from the Artifacts section above**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- **Login Test**: rampUsers + constantUsersPerSec" >> $GITHUB_STEP_SUMMARY
          echo "- **Transfer Test**: constantConcurrentUsers + rampConcurrentUsers" >> $GITHUB_STEP_SUMMARY
          echo "- **Statement Test**: heavisideUsers" >> $GITHUB_STEP_SUMMARY
          echo "- **Loan Test**: incrementUsersPerSec" >> $GITHUB_STEP_SUMMARY
          echo "- **Bill Pay Test**: atOnceUsers + rampUsers" >> $GITHUB_STEP_SUMMARY

